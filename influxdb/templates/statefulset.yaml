apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "influxdb.fullname" . }}
  labels:
    {{- include "influxdb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "influxdb.selectorLabels" . | nindent 6 }}
  serviceName: "{{ include "influxdb.fullname" . }}"
  template:
    metadata:
      labels:
        {{- include "influxdb.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.securityContext }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      serviceAccountName: {{ include "influxdb.serviceAccountName" . }}
      containers:
      - name: {{ include "influxdb.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - name: api
          containerPort: {{ .Values.config.http.bind_address | default 8086 }}
        - name: rpc
          containerPort: {{ .Values.config.rpc.bind_address | default 8088 }}
        {{- if .Values.env }}
        env:
{{ toYaml .Values.env | indent 10 }}
        {{- end }}
        {{- if .Values.envFromSecret }}
        envFrom:
        - secretRef:
            name: {{ .Values.envFromSecret }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.path | default "/ping" }}
            port: api
            scheme: {{ .Values.livenessProbe.scheme | default "HTTP" }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 30 }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 5 }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.path | default "/ping" }}
            port: api
            scheme: {{ .Values.readinessProbe.scheme | default "HTTP" }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 5 }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 1 }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          httpGet:
            path: {{ .Values.startupProbe.path | default "/ping" }}
            port: api
            scheme: {{ .Values.startupProbe.scheme | default "HTTP" }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold | default 6 }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds | default 5 }}
        {{- end }}
        volumeMounts:
        - name: {{ include "influxdb.fullname" . }}-data
          mountPath: /var/lib/influxdb
        - name: config
          mountPath: /etc/influxdb
        {{- if .Values.initScripts.enabled }}
        - name: init
          mountPath: /docker-entrypoint-initdb.d
        {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "influxdb.fullname" . }}
      {{- if .Values.initScripts.enabled }}
      - name: init
        configMap:
          name: {{ include "influxdb.fullname" . }}-init
      {{- end }}
      {{- if (not .Values.persistence.enabled ) }}
      - name: {{ include "influxdb.fullname" . }}-data
        emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "influxdb.fullname" . }}-data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
      {{- if .Values.persistence.storageClassName }}
      {{- if (eq "-" .Values.persistence.storageClassName) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClassName }}"
      {{- end }}
      {{- end }}
  {{- end }}